name: Repo hygiene guard

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  hygiene:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Get list of files that are Added/Modified/Renamed only (ignore Deletions)
      - name: Compute changed files (A/M/R only)
        shell: bash
        run: |
          set -e
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Fetch the PR base branch and use FETCH_HEAD directly
            git fetch --no-tags --depth=1 origin ${{ github.base_ref }}
            BASE_REF=FETCH_HEAD
            git diff --diff-filter=AMR --name-only "$BASE_REF...HEAD" > changed_files.txt
          else
            # Push to a branch (often main/master). Use 'before' SHA if available.
            BASE_SHA="${{ github.event.before }}"
            if [ -z "$BASE_SHA" ]; then
              # Fallback: previous commit (handles first commit case too)
              BASE_SHA="$(git rev-parse HEAD^ 2>/dev/null || true)"
            fi
            if [ -n "$BASE_SHA" ]; then
              git diff --diff-filter=AMR --name-only "$BASE_SHA" "${{ github.sha }}" > changed_files.txt
            else
              # First commit on branch: treat all tracked files as "changed"
              git ls-files > changed_files.txt
            fi
          fi
          echo "Changed files:"; cat changed_files.txt || true

      - name: Fail if banned paths are introduced
        shell: bash
        run: |
          BAN_PATTERNS='
          ^node_modules/
          (^|/)__pycache__/
          ^\.DS_Store$
          ^dist/
          ^build/
          (^|/)\.venv/
          (^|/)venv/
          (^|/)\.arduino-build/
          (^|/)\.pio/
          '
          EXIT=0
          if [ -s changed_files.txt ]; then
            while IFS= read -r file; do
              [ -z "$file" ] && continue
              while IFS= read -r pat; do
                [ -z "$pat" ] && continue
                if echo "$file" | grep -Eiq "$pat"; then
                  echo "::error file=$file::Banned path matched: $pat"
                  EXIT=1
                fi
              done <<< "$BAN_PATTERNS"
            done < changed_files.txt
          fi
          exit $EXIT